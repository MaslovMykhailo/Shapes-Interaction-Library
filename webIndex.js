var shapesInteraction=function(n){var t={};function r(e){if(t[e])return t[e].exports;var o=t[e]={i:e,l:!1,exports:{}};return n[e].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=n,r.c=t,r.d=function(n,t,e){r.o(n,t)||Object.defineProperty(n,t,{configurable:!1,enumerable:!0,get:e})},r.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return r.d(t,"a",t),t},r.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},r.p="",r(r.s=10)}([function(n,t){function r(n){for(var t=[],r=n,e=0;e<r.length;e++)0!==e?t.push([r[e-1],r[e]]):t.push([r[r.length-1],r[e]]);return t}function e(n){return[n[0],[n[0][0]+n[1],n[0][1]],[n[0][0]+n[1],n[0][1]+n[2]],[n[0][0],n[0][1]+n[2]]]}n.exports={segmentLength:function(n){return Math.sqrt(Math.pow(n[0][0]-n[1][0],2)+Math.pow(n[0][1]-n[1][1],2))},normalToPoint:function(n,t){var r,e,o=n[1][1]-n[0][1],i=n[0][0]-n[1][0];return 0!==o?e=i/o*((r=100)-t[0])+t[1]:r=o/i*((e=100)-t[1])+t[0],[t,[r,e]]},pointOfLineIntersect:function(n,t){var r=n[1][1]-n[0][1],e=n[0][0]-n[1][0],o=r*n[0][0]+e*n[0][1],i=t[1][1]-t[0][1],u=t[0][0]-t[1][0],c=i*t[0][0]+u*t[0][1],f=r*u-i*e;return 0===f?null:[(u*o-e*c)/f,(r*c-i*o)/f]},outerRectOfPolygon:function(n){for(var t=-1/0,r=1/0,e=-1/0,o=1/0,i=0;i<n.length;i++)t=Math.max(t,n[i][0]),e=Math.max(e,n[i][1]),r=Math.min(r,n[i][0]),o=Math.min(o,n[i][1]);return[[r,o],t-r,e-o]},segmentsOfPolygon:r,pointsOfRect:e,segmentsOfRect:function(n){return r(e(n))}}},function(n,t,r){var e=r(0),o={point:function(n,t){return Math.floor(100*n[0])===Math.floor(100*t[0])&&Math.floor(100*n[1])===Math.floor(100*t[1])},segment:function(n,t){var r=e.segmentLength(t),o=e.segmentLength([n,t[0]]),i=e.segmentLength([n,t[1]]);return Math.abs(o+i-r)<=.01},rectangle:function(n,t){for(var r=e.segmentsOfRect(t),o=0;o<r.length;o++)if(this.segment(n,r[o]))return!0;return!1},circle:function(n,t){var r=e.segmentLength([[n[0],n[1]],[t[0][0],t[0][1]]]);return Math.abs(t[1]-r)<=.01},polygon:function(n,t){for(var r=e.segmentsOfPolygon(t),o=0;o<r.length;o++)if(this.segment(n,r[o]))return!0;return!1}};n.exports=o},function(n,t,r){var e=r(1),o=r(0),i=r(3),u={point:function(n,t){return e.segment(t,n)},segment:function(n,t){var r=o.pointOfLineIntersect(n,t);if(r)return e.segment(r,n)&&e.segment(r,t);var i=n[0],u=n[1];return e.segment(i,t)||e.segment(u,t)},rectangle:function(n,t){if(i(t,n[0])&&!i(t,n[1]))return!0;if(i(t,n[1])&&!i(t,n[0]))return!0;for(var r=o.segmentsOfRect(t),e=0;e<4;e++)if(this.segment(n,r[e]))return!0;return!1},circle:function(n,t){var r=n[0],u=n[1];if(i(t,r)&&i(t,u))return!1;if(i(t,n[0])&&!i(t,n[1]))return!0;if(i(t,n[1])&&!i(t,n[0]))return!0;var c=o.normalToPoint(n,t[0]),f=o.pointOfLineIntersect(c,n);return!!(f&&e.segment(f,n)&&i(t,f))||(e.circle(r,t)||e.circle(u,t))},polygon:function(n,t){if(i(t,n[0])&&!i(t,n[1]))return!0;if(i(t,n[1])&&!i(t,n[0]))return!0;for(var r=o.segmentsOfPolygon(t),e=0;e<r.length;e++)if(this.segment(n,r[e]))return!0;return!1}};n.exports=u},function(n,t,r){var e=r(5),o=r(6),i=r(7),u=r(12),c=r(8),f=r(13);n.exports=function(n,t){var r=e(n),s=e(t);return("point"!==r||"point"===s)&&("segment"!==r||"point"===s||"segment"===s)&&{point:function(){return o[s](n,t)},segment:function(){return i[s](n,t)},rectangle:function(){return c[s](n,t)},circle:function(){return u[s](n,t)},polygon:function(){return f[s](n,t)}}[r]()}},function(n,t,r){var e=r(2),o=r(1),i=r(0),u=r(3),c={point:function(n,t){return o.circle(t,n)},segment:function(n,t){return e.circle(t,n)},circle:function(n,t){return!u(n,t)&&!u(t,n)&&i.segmentLength([n[0],t[0]])<=n[1]+t[1]},rectangle:function(n,t){var r=t[0][0],o=t[0][1],i=t[0][0]+t[1],u=t[0][1]+t[2];return e.circle([[r,o],[i,o]],n)||e.circle([[r,o],[r,u]],n)||e.circle([[i,u],[r,u]],n)||e.circle([[i,u],[i,o]],n)},polygon:function(n,t){for(var r=i.segmentsOfPolygon(t),e=0;e<r.length;e++)if(this.segment(n,r[e]))return!0;return!1}};n.exports=c},function(n,t){n.exports=function(n){switch(n.length){case 2:return Array.isArray(n[0])?Array.isArray(n[1])?"segment":"circle":"point";case 3:return Array.isArray(n[2])?"polygon":"rectangle";default:return"polygon"}}},function(n,t){var r={point:function(n,t){return Math.floor(100*n[0])===Math.floor(100*t[0])&&Math.floor(100*n[1])===Math.floor(100*t[1])}};n.exports=r},function(n,t,r){var e=r(0),o={point:function(n,t){var r=e.segmentLength(n),o=e.segmentLength([t,n[0]]),i=e.segmentLength([t,n[1]]);return Math.abs(o+i-r)<.01},segment:function(n,t){return this.point(n,t[0])&&this.point(n,t[1])}};n.exports=o},function(n,t,r){var e=r(0),o={point:function(n,t){var r=n[0][0],e=n[0][0]+n[1],o=n[0][1],i=n[0][1]+n[2];return t[0]>=r&&t[0]<=e&&t[1]>=o&&t[1]<=i},segment:function(n,t){return this.point(n,t[0])&&this.point(n,t[1])},rectangle:function(n,t){for(var r=e.pointsOfRect(t),o=0;o<4;o++)if(!this.point(n,r[o]))return!1;return!0},circle:function(n,t){var r=[[t[0][0]-t[1],t[0][1]-t[1]],2*t[1],2*t[1]];return this.rectangle(n,r)},polygon:function(n,t){for(var r=0;r<t.length;r++)if(!this.point(n,t[r]))return!1;return!0}};n.exports=o},function(n,t,r){var e=r(2),o=r(1),i=r(4),u=r(0),c=r(3),f={point:function(n,t){return o.rectangle(t,n)},segment:function(n,t){return e.rectangle(t,n)},circle:function(n,t){return i.rectangle(t,n)},rectangle:function(n,t){if(c(n,t)&&c(t,n))return!0;if(c(n,t)||c(t,n))return!1;var r=n[0][0],e=n[0][1],o=n[0][0]+n[1],i=n[0][1]+n[2],u=t[0][0],f=t[0][1],s=t[0][0]+t[1],g=t[0][1]+t[2];return o>=u&&r<=s&&i>=f&&e<=g},polygon:function(n,t){for(var r=u.segmentsOfPolygon(t),e=0;e<r.length;e++)if(this.segment(n,r[e]))return!0;return!1}};n.exports=f},function(n,t,r){var e=r(11),o=r(3);n.exports={intersection:e,contain:o}},function(n,t,r){var e=r(2),o=r(1),i=r(4),u=r(9),c=r(14),f=r(5);n.exports=function(n,t){var r=f(n),s=f(t);return{point:function(){return o[s](n,t)},segment:function(){return e[s](n,t)},rectangle:function(){return u[s](n,t)},circle:function(){return i[s](n,t)},polygon:function(){return c[s](n,t)}}[r]()}},function(n,t,r){var e=r(0),o={point:function(n,t){var r=e.segmentLength([[t[0],t[1]],[n[0][0],n[0][1]]]);return n[1]>=r},segment:function(n,t){return this.point(n,t[0])&&this.point(n,t[1])},circle:function(n,t){var r=e.segmentLength([n[0],t[0]]);return n[1]>=t[1]+r},rectangle:function(n,t){for(var r=e.pointsOfRect(t),o=0;o<4;o++)if(!this.point(n,r[o]))return!1;return!0},polygon:function(n,t){for(var r=0;r<t.length;r++)if(!this.point(n,t[r]))return!1;return!0}};n.exports=o},function(n,t,r){var e=r(0),o=r(8),i=r(7),u=r(6),c={point:function(n,t){for(var r=0;r<n.length;r++)if(u.point(n[r],t))return!0;if(o.point(e.outerRectOfPolygon(n),t)){var c=[[0,0],t],s=e.segmentsOfPolygon(n),g=0;for(r=0;r<s.length;r++)f(c,s[r])&&g++,i.point(c,n[r])&&g--;return g%2==1}return!1},segment:function(n,t){return this.point(n,t[0])&&this.point(n,t[1])},rectangle:function(n,t){for(var r=e.pointsOfRect(t),o=0;o<4;o++)if(!this.point(n,r[o]))return!1;return!0},polygon:function(n,t){for(var r=0;r<t.length;r++)if(!this.point(n,t[r]))return!1;return!0},circle:function(n,t){var r=[t[0][0]-t[1],t[0][1]],e=[t[0][0]-t[1]/2,t[0][1]-t[1]],o=[t[0][0]+t[1]/2,t[0][1]-t[1]],i=[t[0][0]+t[1],t[0][1]],u=[t[0][0]+t[1]/2,t[0][1]+t[1]],c=[t[0][0]-t[1]/2,t[0][1]+t[1]];return this.polygon(n,[r,e,o,i,u,c])}};function f(n,t){var r=e.pointOfLineIntersect(n,t);if(r)return i.point(n,r)&&i.point(t,r);var o=n[0],u=n[1];return i.point(t,o)||i.point(t,u)}n.exports=c},function(n,t,r){var e=r(2),o=r(1),i=r(4),u=r(9),c=r(0),f={point:function(n,t){return o.polygon(t,n)},segment:function(n,t){return e.polygon(t,n)},rectangle:function(n,t){return u.polygon(t,n)},circle:function(n,t){return i.polygon(t,n)},polygon:function(n,t){if(u.rectangle(c.outerRectOfPolygon(n),c.outerRectOfPolygon(t))){for(var r=c.segmentsOfPolygon(n),o=c.segmentsOfPolygon(t),i=0;i<r.length;i++)for(var f=0;f<o.length;f++)if(e.segment(r[i],o[f]))return!0;return!1}return!1}};n.exports=f}]);